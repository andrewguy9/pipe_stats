#!/usr/bin/perl

#
# Rounds fields from a stream according to rules.
#

use strict;
use warnings;
use POSIX;

use Getopt::Long;
use List::Util qw[min max];

my $step = 1;

my $floor;
my $ceil;
my $round;
my $base=1.0;

my $result = GetOptions(
  "floor" => \$floor,
  "ceil" => \$ceil,
  "round" => \$round,
  "base=f" => \$base,
) or die usage("Invalid input: $!");

while(<>) {
  my $line = $_;
  chomp $line;
  my $num = $line;
  my $result;
  if ($floor) {
    $result = base_floor($num, $base);
  } elsif ($ceil) {
    $result = base_ceil($num, $base);
  } elsif ($round) {
    $result = base_round($num, $base);
  } else {
    die usage("Must specify rounding policy");
  }
  print "$result\n"
}

sub base_round {
  my $num = shift;
  my $base = shift;

  my $mult = int($num / $base);
  my $diff = $num - ($base * $mult);
  if ($diff >= (.5 * $base)) {
      return $base * ($mult+1);
    } else {
      return $base * $mult;
    }
}

sub base_floor {
  my $num = shift;
  my $base = shift;

  my $mult = int($num / $base);
  return $base * $mult;
}

sub base_ceil {
  my $num = shift;
  my $base = shift;

  my $mult = int($num / $base);
  return $base * ($mult+1);
}

sub usage {
  my $msg = shift @_;
  print STDERR "$msg\n";
  print STDERR "round [--floor] [--ceil] [--round]\n";
  print STDERR "Consumes a stream of numbers\n"
}
