#!/usr/bin/perl

#
# Produces a representative sample from a stream of undetermined length.
#

use strict;
use warnings;
use Getopt::Long;

my $sampleSize = 0;
my @sample = ();
my $n = 0;

my $result = GetOptions(
        "size=i"=> \$sampleSize,
) or die usage("Invalid options: $!");

if (not $sampleSize) {
  die usage("size must be specified");
}

if (@ARGV) {
        for my $file (@ARGV) {
                open my $fd, $file or next;
                process_file($fd);
                close $fd;
        }
} else {
        open my $stdin_fd, "/dev/stdin" or die ("unable to open stdin");
        process_file($stdin_fd);
}

sub process_file {
        my $fd = shift @_;
        while(<>) 
        {
                if ($n < $sampleSize) {
                        push @sample, $_;
                } else {
                        my $index = int(rand($n));
                        if ($index < $sampleSize) {
                                $sample[ $index ] = $_;
                        }
                }
                $n++;
        }
        for my $line (@sample) {
                print $line;
        }
}

sub usage {
        my $msg = shift @_;

        print STDERR "$msg\n";
        print STDERR "sample [--size n] [files...]\n";
        print STDERR "Collects a statistical sample of size n\n";
        print STDERR "If no files are specified, reads from stdin\n";
}


